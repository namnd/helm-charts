apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vpn.fullname" . }}
  labels:
    {{- include "vpn.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vpn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vpn.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vpn.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "vpn.fullname" . }}-iamra-sidecar
          image: {{ .Values.iamra.image }}
          command: ["aws_signing_helper"]
          args:
            - "serve"
            - "--certificate"
            - "/mnt/credentials/tls.crt"
            - "--private-key"
            - "/mnt/credentials/tls.key"
            - "--trust-anchor-arn"
            - "$(TRUST_ANCHOR_ARN)"
            - "--profile-arn"
            - "$(PROFILE_ARN)"
            - "--role-arn"
            - "$(ROLE_ARN)"
          env:
            - name: TRUST_ANCHOR_ARN
              value: {{ .Values.iamra.trustAnchorArn }}
            - name: PROFILE_ARN
              value: {{ .Values.iamra.profileArn }}
            - name: ROLE_ARN
              value: {{ .Values.iamra.roleArn }}
          volumeMounts:
            - mountPath: /mnt/credentials
              name: credentials

        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: AWS_EC2_METADATA_SERVICE_ENDPOINT
              value: "http://127.0.0.1:9911/"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
      {{- if .Values.livenessProbe.enabled }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- end }}
      {{- if .Values.readinessProbe.enabled }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
      {{- end }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: credentials
          secret:
            secretName: {{ .Values.iamra.certSecretName }}

      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
